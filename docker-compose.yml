version: '2'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - /srv/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - apache
    environment: 
      TZ: "Europe/Moscow"
    networks:
      - default
  apache:
    image: arcadev/apache2-php7.2
    container_name: apache
    ports:
      - 8080:8080
      - 8081:8081
    depends_on:
      - mysql
    volumes:
      - /srv/www/html:/var/www/html
      - /srv/apache/conf:/etc/apache2/sites-available
    environment:
      TZ: "Europe/Moscow"
    networks:
      - default
  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_DATABASE: my_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - /srv/mysql:/var/lib/mysql
    environment:
      TZ: "Europe/Moscow"
    networks:
      - default

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - /srv/prometheus:/etc/prometheus/
    container_name: prometheus
    hostname: prometheus
    volumes:
      - /srv/prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    environment:
      TZ: "Europe/Moscow"
    networks:
      - default

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    container_name: exporter
    hostname: exporter
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - default

  grafana:
    image: grafana/grafana
    user: root
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - /srv/grafana:/var/lib/grafana
      - /srv/grafana/provisioning/:/etc/grafana/provisioning/
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - default